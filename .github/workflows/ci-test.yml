# prettier-ignore
name: CI Test

on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0  # Consider changing to mysql:5.7 if needed
        ports:
          - 3313:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=10 --memory=2g --cpus=2
        env:
          MYSQL_DATABASE: 'storefy_db_test'
          MYSQL_ROOT_PASSWORD: '1234'
          MYSQL_USER: 'franklinserif'
          MYSQL_PASSWORD: '1234'
        volumes:
          - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro  # Ensure correct permissions
          - /usr/share/zoneinfo:/usr/share/zoneinfo:ro  # Handle timezone files

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Print MySQL logs
        run: docker logs $(docker ps -q --filter ancestor=mysql:8.0)  # Adjust version if necessary

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..120}; do  # Increase retries to 120
            if mysqladmin ping -h 127.0.0.1 --silent; then
              break
            fi
            echo 'Waiting for MySQL...'
            sleep 5  # Increase sleep time to 5 seconds
          done

      - name: Initialize MySQL Database  # Optional if init.sql fails
        run: |
          docker exec $(docker ps -q --filter ancestor=mysql:8.0) mysql -u root -p1234 -e "CREATE DATABASE IF NOT EXISTS storefy_db_test;"
          docker exec $(docker ps -q --filter ancestor=mysql:8.0) mysql -u root -p1234 -e "CREATE USER 'franklinserif'@'%' IDENTIFIED BY '1234';"
          docker exec $(docker ps -q --filter ancestor=mysql:8.0) mysql -u root -p1234 -e "GRANT ALL PRIVILEGES ON storefy_db_test.* TO 'franklinserif'@'%';"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test
        env:
          CI: true  # Forcing CI mode for Jest
          MYSQL_HOST: 127.0.0.1  # Set this in your test config

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          branch: main
          title: "Merge dev into main"
          body: "Automated PR to merge changes from dev into main."
          labels: "auto-generated"
          assignees: "franklinsrr"
          reviewers: "franklinsrr"
